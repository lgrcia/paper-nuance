
configfile: "config.yaml"

methods = ["nuance", "biweight_bls"]
idxs = range(config["n"])

rule all:
    input: "figures/synthetic_ir.pdf"

rule params:
    output: "data/params/{i}.yaml"
    conda: "envs/base.yaml"
    priority: 0
    script: "scripts/params.py"

rule lightcurve:
    input: "data/params/{i}.yaml"
    output: "data/lightcurves/{i}.npy"
    conda: "envs/base.yaml"
    priority: 0
    script: "scripts/lightcurve.py"

rule search:
    input: 
        lc="data/lightcurves/{i}.npy",
        params="data/params/{i}.yaml"
    output: "data/results/{method}/{i}.pkl"
    conda: "envs/base.yaml"
    priority: 1
    script: "scripts/{wildcards.method}.py"

rule aggregate:
    input: 
        biweight_bls = [f"data/results/biweight_bls/{i}.pkl" for i in idxs],
        nuance = [f"data/results/nuance/{i}.pkl" for i in idxs],
        params = [f"data/params/{i}.yaml" for i in idxs]
    output: "data/results.csv"
    conda: "envs/base.yaml"
    priority: 2
    script: "scripts/aggregate.py"

rule plot:
    input: "data/results.csv"
    output: "figures/synthetic_ir.pdf"
    conda: "envs/base.yaml"
    priority: 3
    script: "scripts/plot.py"
