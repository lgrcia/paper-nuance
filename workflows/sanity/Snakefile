
configfile: "config.yaml"

idxs = range(config["n"])

rule all:
    input: 
        "figures/control_test.pdf",
        "data/params_check.yaml"

rule lightcurve:
    output: 'data/lightcurve.npy'
    conda: 'envs/base.yaml'
    script: 'scripts/lightcurve.py'

rule compute_depth:
    input: 'data/lightcurve.npy'
    output: 'data/depths_range.yaml'
    conda: 'envs/base.yaml'
    script: 'scripts/compute_depth.py' 

rule params:
    input: 'data/lightcurve.npy', 'data/depths_range.yaml'
    output: 'data/params/{i}.yaml'
    conda: 'envs/base.yaml'
    script: 'scripts/params.py'

rule inject:
    input: 
        params = 'data/params/{i}.yaml',
        lc = 'data/lightcurve.npy',
    output: 'data/injected/{i}.npy'
    conda: 'envs/base.yaml'
    script: 'scripts/inject.py'

rule nuance_search:
    input: 
        params = 'data/params/{i}.yaml',
        lc = 'data/lightcurve.npy',
        injected = 'data/injected/{i}.npy'
    output: 'data/results/nuance/{i}.yaml'
    conda: 'envs/base.yaml'
    script: 'scripts/nuance_search.py'

rule bls_search:
    input: 
        params = 'data/params/{i}.yaml',
        lc = 'data/lightcurve.npy',
        injected = 'data/injected/{i}.npy'
    output: 'data/results/bls/{i}.yaml'
    conda: 'envs/base.yaml'
    script: 'scripts/bls_search.py'

rule concat:
    input: 
        params = [f"data/params/{i}.yaml" for i in idxs],
        bls = [f"data/results/bls/{i}.yaml" for i in idxs],
        nuance = [f"data/results/nuance/{i}.yaml" for i in idxs]
    output: 'data/results.csv'
    conda: 'envs/base.yaml'
    script: 'scripts/concat.py'

rule plot:
    input: 'data/results.csv'
    output: 'figures/control_test.pdf'
    conda: 'envs/base.yaml'
    script: 'scripts/plot.py'